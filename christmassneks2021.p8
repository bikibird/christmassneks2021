pico-8 cartridge // http://www.pico-8.com
version 32
__lua__
--by jenny schmidt (bikibird)
--for christmas 2021

black,dark_blue,dark_purple,dark_green,brown,dark_gray,light_gray,white,red,orange,yellow,green,blue,indigo,pink,peach=0,140,2,3,4,5,6,7,8,9,10,11,12,13,14,15
left,right,up,down,fire1,fire2=0,1,2,3,4,5
becalmed=6
buttons={}
buttons[1]=left; buttons[2]=right; buttons[4]=up; buttons[8]=down
bulb_colors={green,red,blue,yellow}
bulb_blink={dark_green,pink,dark_blue,brown}
sparks={black,black,black,yellow}
flash_pattern={0,1,4}
crackle_pattern={0,39}
-->8
--initialize
function _init()
	pal({[0]=0,140,2,3,4,5,6,7,8,9,10,11,12,13,14,15},1)
	reverse=false
	express=false
	

	flash_wait=.1
	flash_time=time()
	gameover=false

	init_snek_yard()
	_update=update_snek_yard
	_draw=draw_snek_yard
end	
function init_bulbs()
	bulbs={}
	for i=0,3 do
		local bulb=get_empty_cell()
		if (bulb) then
			bulb.s=flr(rnd(4))*5 +4
			mset(bulb.x,bulb.y,bulb.s)
			add(bulbs,bulb)
		end	
	end
end
function init_snek()
	snek={{x=60,y=60,s=flr(rnd(4))*5,aim=becalmed,train=false, wire={x0=64, y0=64, x1=64,y1=64}}}
	tongue={x=64,y=59,x0=64,y0=59,x1=64,y1=59,x2=64,y2=59,x3=64,y3=59,c0=black,c1=black,c2=black,c3=black,}
end	
-->8
--intro
function update_intro()
	if btnp(fire2) then
		init_snek_yard()
		_update=update_snek_yard
		_draw=draw_snek_yard
		init_forest()
	 
	end
end

function draw_intro()
	draw_snowscape()
	print(" tis the season to sing carols,",0,4,white)
	print("     drink nog, and decorate ",0,12)
	print(" the night with christmas sneks",0,20)
	print("        press X to play",4,119,dark_blue)
end

-->8
-->snek
function update_snek()
	if (short==0)then
			
		travel(snek[#snek])
	else
		short_circuit(snek[#snek])
	end	
	update_burnout()
end
function slither()
	local dy, dx, c, gridx, gridy,aim
	for i=#snek-1,1,-1 do
		gridx=flr((snek[i].x+3)/8)
		gridy=flr((snek[i].y+3)/8)
		
			social_distance(i,10)
	end
	for i=#snek-1,1,-1 do
		snek[i].wire={x0=snek[i].x+4,y0=snek[i].y+4,x1=snek[i+1].x+3,y1=snek[i+1].y+3}
	end
	if (not express) then
		for i=#snek-1,1,-1 do
			if(tongue.x>=snek[i].x) then
				if (tongue.x<snek[i].x+8) then
					if (tongue.y>=snek[i].y) then	
						if(tongue.y<snek[i].y+8) then
							short=i
							break
						end	
					end
				end		
			end
		end
	end	
end	
function social_distance(i,distance)
	dx=snek[i+1].x - snek[i].x
	dy=snek[i+1].y - snek[i].y
	c=sqrt(dx*dx+dy*dy)
	if (c>distance) then
		snek[i].x=snek[i+1].x-dx/c*distance
		snek[i].y=snek[i+1].y-dy/c*distance
	end
end
function travel(head)
	if (head) then
		if (btn(left)) then
			head.aim=left
		elseif (btn(right)) then
			head.aim=right
		elseif (btn(up)) then
			head.aim=up
		elseif (btn(down)) then
			head.aim=down
		end	
		if (head.aim==left) then
			head.x-=speed
		elseif (head.aim==right) then
			head.x+=speed
		elseif (head.aim==up) then
			head.y-=speed
		elseif (head.aim==down) then	
			head.y+=speed
		end
		update_tongue(head)
		update_growth(head)
		slither()
	end
end

function short_circuit()
	local head=snek[#snek]
	if (#snek>=short) then
		add(burnouts,deli(snek,short))
		burnouts[#burnouts].wait=.01+rnd(2)*.01
		burnouts[#burnouts].time=time()
	end
	if (#snek<short) then
		short=0
		if (#snek>0) then
			local new_head=snek[#snek]
			new_head.aim=head.aim
			speed=1.5
			for bulb in all(snek) do
				bulb.train=false
			end
			boarding=false
			new_head.wire={x0=new_head.x+4, y0=new_head.y+4,x0=new_head.x+4, y0=new_head.y+4}
			update_tongue(new_head)

		end	
	end	
end	
function update_burnout()
	if (#burnouts>0)then
		burnout=burnouts[1]
		if (burnout.s%5==3) then
			sfx(48)
		end	
		if (time()-burnout.time>burnout.wait) then
			burnout.s+=1
			burnout.time=time()
		end	
		if (burnout.s%5==4)then
			deli(burnouts,1)
		end	
		if (#burnouts==0 and #snek==0) then
			gameover_time=time()
		end	
	elseif(#snek==0) then	
		local timing=time()-gameover_time
		if (timing >.4 and timing <.5) then
			mset(9,13,0)
			sfx(48)
		elseif (timing >.5 and timing <.6) then
			mset(7,7,0)
			sfx(48)
		elseif (timing >.6 and timing <.7) then
			mset(4,3,0)
			sfx(48)		
		elseif(timing>1 and timing<5)then
			for i=0,5 do
				local gridx=flr(rnd(16))
				local gridy=flr(rnd(16))
				mset(gridx,gridy,0)
				sfx(48)
			end
		elseif (timing>5) then
			gameover=true
		end	
	end	
end

function update_growth(head)
	local gridx=flr(tongue.x/8)
	local gridy=flr(tongue.y/8)
	if (fget(mget(gridx,gridy))==1) then
		for i, bulb in pairs(bulbs) do
			if (bulb.x==gridx and bulb.y == gridy) then
				bulb.s=flr(bulb.s/5)*5
				bulb.aim=head.aim
				bulb.x*=8
				bulb.y*=8
				bulb.wire={x0=bulb.x,y0=bulb.y,x1=bulb.x,y1=bulb.y}
				bulb.train=false
				add(snek,bulb)
				deli(bulbs,i)
				break
			end
		end
		mset(gridx,gridy,26)
		sfx(41)
	end
end
function update_tongue(head)
	if (head.aim==up) then
		tongue={
			x=head.x+3.5, y=head.y-1,
			x0=head.x+3.5-flr(rnd(2)), y0=head.y-2-flr(rnd(2)), c0=sparks[flr(rnd(4))+1],
			x1=head.x+3.5+flr(rnd(2)), y1=head.y-2+flr(rnd(2)), c1=sparks[flr(rnd(4))+1],
			x2=head.x+3.5-flr(rnd(2)), y2=head.y-2+flr(rnd(2)), c2=sparks[flr(rnd(4))+1],
			x3=head.x+3.5+flr(rnd(2)), y3=head.y-2-flr(rnd(2)), c3=sparks[flr(rnd(4))+1]
		}
	elseif (head.aim==down) then
		tongue={
			x=head.x+3.5, y=head.y+8,
			x0=head.x+3-flr(rnd(2)),y0=head.y+9-flr(rnd(2)), c0=sparks[flr(rnd(4))+1],
			x1=head.x+4+flr(rnd(2)),y1=head.y+9+flr(rnd(2)), c1=sparks[flr(rnd(4))+1],
			x2=head.x+3-flr(rnd(2)),y2=head.y+9+flr(rnd(2)), c2=sparks[flr(rnd(4))+1],
			x3=head.x+4+flr(rnd(2)),y3=head.y+9-flr(rnd(2)), c3=sparks[flr(rnd(4))+1]
		}
	elseif (head.aim==left) then
		tongue={
			x=head.x-1, y=head.y+3.5,
			x0=head.x-2-flr(rnd(2)), y0=head.y+3-flr(rnd(2)), c0=sparks[flr(rnd(4))+1],
			x1=head.x-2+flr(rnd(2)), y1=head.y+4+flr(rnd(2)), c1=sparks[flr(rnd(4))+1],
			x2=head.x-2+flr(rnd(2)), y2=head.y+3-flr(rnd(2)), c2=sparks[flr(rnd(4))+1],
			x3=head.x-2-flr(rnd(2)), y3=head.y+4+flr(rnd(2)), c3=sparks[flr(rnd(4))+1]
		}
	elseif (head.aim==right) then
		tongue={
			x=head.x+8, y=head.y+3.5,
			x0=head.x+9-flr(rnd(2)), y0=head.y+3-flr(rnd(2)), c0=sparks[flr(rnd(4))+1],
			x1=head.x+9+flr(rnd(2)), y1=head.y+4+flr(rnd(2)), c1=sparks[flr(rnd(4))+1],
			x2=head.x+9+flr(rnd(2)), y2=head.y+3-flr(rnd(2)), c2=sparks[flr(rnd(4))+1],
			x3=head.x+9-flr(rnd(2)), y3=head.y+4+flr(rnd(2)), c3=sparks[flr(rnd(4))+1]
		}
		
	end
end
function draw_snek()
	
	for i=1,#snek-1 do
		local wire=snek[i].wire
		line(wire.x0,wire.y0,wire.x1,wire.y1,dark_purple)
	end
	for i=1,#snek do
		spr(snek[i].s,snek[i].x,snek[i].y)	
	end
	if (#snek>0) then
		pset(tongue.x0, tongue.y0,tongue.c0)
		pset(tongue.x1, tongue.y1,tongue.c1)
		pset(tongue.x2, tongue.y2,tongue.c2)
		pset(tongue.x3, tongue.y3,tongue.c3)
	end	
	for burnout in all(burnouts) do
		spr(burnout.s,burnout.x,burnout.y)
	end
end	
-->8
--snek yard
function init_snek_yard()
	speed=1.5
	short=0
	offset=0
	burnouts={}
	boarding=false
	init_snek()
	init_bulbs()
end	
function update_snek_yard()
	if (btnp(fire2)and not gameover) then
		express=true
		gaze_time=time()
		gaze_wait=2
		for bulb in all(snek) do
			bulb.train=false
			add(lights,{x=bulb.x,y=bulb.y,c=flr(bulb.s/5)+1})
		end
		music(39)
	end	
	update_snek()
	if (#bulbs <4) then
		local bulb=get_empty_cell()
		if (bulb) then
			bulb.s=flr(rnd(4))*5 +4
			mset(bulb.x,bulb.y,bulb.s)
			add(bulbs,bulb)
		end
	end		
end
function draw_snek_yard()
	cls()
	map(0,0)
	if (gameover) then
		print("           game over", 0,56, red)
		print("         P - play again", 0,64,red)
	else
		draw_snek()
	end	
end
function get_empty_cell()
	local gridx=flr(rnd(14)+1)
	local gridy=flr(rnd(14)+1)
	--local counter =0
	local snekx=flr(snek[1].x/8)
	local sneky=flr(snek[1].y/8)
	if ((snek_zone(gridx,gridy))) then
			return (false)
	else		
		return {x=gridx,y=gridy}
	end
	
end
function snek_zone(x,y)
	local gridx0, gridy0, gridx1, gridy1
	for bulb in all(snek) do
		gridx0=flr((bulb.x)/8)
		gridy0=flr((bulb.y)/8)
		gridx1=flr((bulb.x+8)/8)
		gridy1=flr((bulb.y+8)/8)
		if (gridx0==x and gridy0==y) then
		 return true
		end
		if (gridx1==x and gridy0==y) then
			return true
		end
		if (gridx0==x and gridy1==y) then
			return true
		end
		if (gridx1==x and gridy1==y) then
			return true
		end
	end
	--space to move forward 
	gridx0=flr((snek[1].x-4)/8)
	gridy0=flr((snek[1].y-4)/8)
	gridx1=flr((snek[1].x+12)/8)
	gridy1=flr((snek[1].y+12)/8)
	if (gridx0==x and gridy0==y) then
		return true
	end
	if (gridx1==x and gridy0==y) then
		return true
	end
	if (gridx0==x and gridy1==y) then
		return true
	end
	if (gridx1==x and gridy1==y) then
		return true
	end
	return false
end

__gfx__
0000000000000000000000000000000000000000777777770000000000000000000000000000000000000000001cc10000011000000110000100001000011000
000000000000000000000000000000000000000077777777000000000000000000000000000000000000000001c77c10011cc110011771100000000001111110
00000000000000000000000000000000000000007377777700000000000000000000000000000000000000001c7cc7c111c77c111177771100110100111cc111
0000000000000000000000000000000000000000737777770000000000000000000000000000000000000000c7c77c7c1c7777c1177777711001c10111cccc11
0000000000000000000000000000000000000000737777770000000000000000000000000000000000000000c7c77c7c1c7777c117777771001cc10011cccc11
00000000000000000000000000000000000000007367777700000000000000000000000000000000000000001c7cc7c111c77c111177771100011100111cc111
000000000000000000000000000000000000000070677777000000000000000000000000000000000000000001c77c10011cc110011771100000001001111110
0000000000000000000000000000000000000777736777770000000000000000000000000000000000000000001cc10000011000000110000100100000011000
0000000000000000000000000000000077777777736777777777777700000000000000000000000000000000003bb30000033000000330000300003000033000
000000000000000000000000000000007777777773677777777777770000000000000000000000000000000003baab30033bb330033773300000000003333330
00000000000000000000000000000000777777777367777777777777000000000000000000000000000000003babbab333baab333377773300330300333bb333
0000000000000000000000000000000077777777736776777777777700000000000000000000000000000000babaabab3ba77ab3377777733003b30333bbbb33
0000000000000000000000000000000077777777736736777777777700000000000000000000000000000000babaabab3ba77ab337777773003bb30033bbbb33
00000000000000000000000000000000777777777333677777777777000000000000000000000000000000003babbab333baab333377773300033300333bb333
000000000000000000000000000000007777776773367777777777770000000000000000000000000000000003baab30033bb330033773300000003003333330
0000000000000000000000000000007777777737733777776307777700000000000000000000000000000000003bb30000033000000330000300300000033000
00000000000000000000000077777777777777637337676367777777000000000000000000000000000000000049940000044000000440000400004000044000
0000000000000000000000007777777663336773603366376377777700000000000000000000000000000000049aa94004499440044774400000000004444440
000000000000000000000000777777776336606630363363677777770000000000000000000000000000000049a99a94449aa9444477774400440400444aa444
00000000000000000000000077777777777633003003336777777777000000000000000000000000000000009a9aa9a949a77a94477777744004940444aaaa44
00000000000000000000000077777777777776300003377777777777000000000000000000000000000000009a9aa9a949a77a94477777740049940044aaaa44
000000000000000000000000777777777777777633367777777777770000000000000000000000000000000049a99a94449aa9444477774400044400444aa444
0000000000000000000000007777777777777666733777777777777700000000000000000000000000000000049aa94004499440044774400000004004444440
00000000000000000000000077777777776336666336333377777777000000000000000000000000000000000049940000044000000440000400400000044000
0000000000000000000000007777777777776333360367777777777777777777000000000000000000000000008ee80000088000000880000800008000088000
000000000000000000000000777777777767663000336777777667777777777700000000000000000000000008effe80088ee880088778800000000008888880
00000000000000000000000077777736773377367333303673366667777777770000000000000000000000008efeefe888effe888877778800880800888ee888
0000000000000000000000007777777733333663363637733663367777777777000000000000000000000000efeffefe8ef77fe8877777788008e80888eeee88
0000000000000000000000007777633666333333663366363036777777777777000000000000000000000000efeffefe8ef77fe887777778008ee80088eeee88
00000000000000000000000077777666333333033336336367777777777777770000000000000000000000008efeefe888effe888877778800088800888ee888
000000000000000000000000777777777333030333033366777777777777777700000000000000000000000008effe80088ee880088778800000008008888880
0000000000000000000000007777777633330036600000303333377777763677000000000000000000000000008ee80000088000000880000800800000088000
00000000000000007777777777777777777766363300066777777777763677770000000000000000000000000000000000000000000000000000000000000000
00000000000000007777777777777777777333633333333333677733337777770000000000000000000000000000000000000000000000000000000000000000
00000000000000007777777777763367767733333363733736663333677777770000000000000000000000000000000000000000000000000000000000000000
00000000000000007777777777777763333637676333337763303336777777770000000000000000000000000000000000000000000000000000000000000000
00000000000000007777776333673303303036730333363033333336633667770000000000000000000000000000000000000000000000000000000000000000
00000000000000007777777733333333000330066633033330330033367777770000000000000000000000000000000000000000000000000000000000000000
00000000000000007777777777776333303030333333303003303336777777770000000000000000000000000000000000000000000000000000000000000000
00000000000000007777777777777763333000303333033303003367777777770000000000000000000000000000000000000000000000000000000000000000
00000000000000007777777777777700330033333300333303300337777766773777777700000000000000000000000000000000000000000000000000000000
00000000000000007777776366776333300030333330333300330036777637767777777700000000000000000000000000000000000000000000000000000000
00000000000000007777776333367766333333333303333333663673676363366777777700000000000000000000000000000000000000000000000000000000
00000000000000007777767763363366336773300033333733366360673633636777777700000000000000000000000000000000000000000000000000000000
00000000000000007777773676333033363303300300333336336760733333367777777700000000000000000000000000000000000000000000000000000000
00000000000000007777777367776300036003000303300363337730603333363777777700000000000000000000000000000000000000000000000000000000
00000000000000007777637733673777763330333003003333307730033330367777777700000000000000000000000000000000000000000000000000000000
00000000000000007777633676033333300000003300303333303000333036677777777700000000000000000000000000000000000000000000000000000000
00000000000000007777763336630373336660030000003300000036333677777777777700000000000000000000000000000000000000000000000000000000
00000000000000007777777333363000030030333630333030033333336777773777777700000000000000000000000000000000000000000000000000000000
00000000000000007777777763676660000333330333303030030330037377637777777700000000000000000000000000000000000000000000000000000000
00000000000000007777777336336377300003030000303000003303333763677777777700000000000000000000000000000000000000000000000000000000
00000000000000007777777760033003333300000030000300033300363036777777777700000000000000000000000000000000000000000000000000000000
00000000000000007777777773300003030063300000330000030066303667777777777700000000000000000000000000000000000000000000000000000000
00000000000000007777776333333000000000000000003000003303003367777777777700000000000000000000000000000000000000000000000000000000
00000000000000007336777633330000000000000000000000000000033776637773377700000000000000000000000000000000000000000000000000000000
00000000777777777777633033036663300000000000000000000006777736377637777777777777000000000000000000000000000000000000000000000000
00000000777777777777776330000633030000000000033003333333676033603677777777777777000000000000000000000000000000000000000000000000
00000000777777777777777770000003300003033033333033303030336603337777777777777777000000000000000000000000000000000000000000000000
00000000777777777777777763633330366330330000330300303000003003677777777777777777000000000000000000000000000000000000000000000000
00000000777777777776337770663303063000330000030033300000030006777777777777777777000000000000000000000000000000000000000000000000
00000000777777777777733363066300000336603000000000003003300076777777777637776777000000000000000000000000000000000000000000000000
00000000777766773777776336006336603330000000000000000333036333333367730377367777000000000000000000000000000000000000000000000000
00000000777636336677776763000330303633300000000000000333333303676376336763777777000000000000000000000000000000000000000000000000
00000000777763663063776333330000300000330000300000003330300006370330336367667777000000000000000000000000000000000000000000000000
00000000777777336300377766676000300000333330333300363333333663330303030363677777000000000000000000000000000000000000000000000000
00000000777777773333333033376333000300003330033003330033330363000300006336777777000000000000000000000000000000000000000000000000
00000000777777777763033300000006303330000033330033303333333003000000330677777777000000000000000000000000000000000000000000000000
00000000777777733303330000000003600333300003333333300000000000000000003777777777000000000000000000000000000000000000000000000000
00000000777777766663300003333003600000030000333330000000000033000003367777777777000000000000000000000000000000000000000000000000
00000000777777633333300303330333000333000000000000000300300330000333677777777777000000000000000000000000000000000000000000000000
00000000777773333677633330000303033333330000000000000000303030333367777777777777000000000000000000000000000000000000000000000000
77777777777777777776033330003000303333333000000000000000000033000036777777763777000000000000000000000000000000000000000000000000
77777777777777777766666333033300000000333300000033330000000000036363677766367777000000000000000000000000000000000000000000000000
77777777777367366673333030000330330030033330333333300000000000333333730336677777000000000000000000000000000000000000000000000000
77777763677763676333000003330333333000000330330003000000000000003330333663677777000000000000000000000000000000000000000000000000
77777777633333067300000030000000000030000000000000000000000033000000033333076667000000000000000000000000000000000000000000000000
77777777777600003033366763030000000000000000000000000000000000300000000000333677000000000000000000000000000000000000000000000000
77777777777776000306330330333600000000000000000000000300000000000000303330006777000000000000000000000000000000000000000000000000
77777777777733363330000333333033000003000000000030000000000003300000030300033367000000000000000000000000000000000000000000000000
77777777766333333333333333336033000000003300003330000300000333000003000003333367000000000000000000000000000000000000000000000000
77777777766663000333033033333000000000030003033330333000330303003303000303667777000000000000000000000000000000000000000000000000
77777777777773033333330333333300000000000000000000000000000000000000000067777777000000000000000000000000000000000000000000000000
77777777777336730333333000000033300000030000003300000000000000000000030077777777000000000000000000000000000000000000000000000000
77777777777777776330000000033300000033333300033000000000003303303333306673777777000000000000000000000000000000000000000000000000
77777776777777663336630000003330333333333303000000000000000000036333033636677777000000000000000000000000000000000000000000000000
77777777333777336630333300000333333000000333000000000000000033030303000063660777000000000000000000000000000000000000000000000000
77763367660033330000030000000000000000000300330000003003000336630000033600006777000000000000000000000000000000000000000000000000
77777300036000000663666663003030000000000000000000000003300033603000370000003333377777000000000000000000000000000000000000000000
77777766300000000000006033630000000000000000000003000003330300000000030030000037777777000000000000000000000000000000000000000000
77777633330030330000003000000000000000000000000000000000030000030003330330000337777777000000000000000000000000000000000000000000
77777777766033330003300033000000000000000000000000000000000000000000000000003377777777000000000000000000000000000000000000000000
77777777600000000300333000033000000000000000000000003000000000000000000003037777777777000000000000000000000000000000000000000000
77777763003033300000033330033330000003333000000003003000000000000000000000006777777777000000000000000000000000000000000000000000
76676633666033333300000333300333330330333000003663000000000300033333330033036777667677000000000000000000000000000000000000000000
76633333630033333300000000000333333033033330333333033330033333303333330033033660633067000000000000000000000000000000000000000000
77766300000000003300333030000000003333000033333333333333300033303330000036333333336777000000000000000000000000000000000000000000
77776330000000300000030300000300000333333003333333000003300300000300000000003333667777000000000000000000000000000000000000000000
77777630303030333000000000033300000003330000333300003000000003000033300003033367777777000000000000000000000000000000000000000000
77777777333303003003300000033303300000000000333330000300000003300000333003300003077777000000000000000000000000000000000000000000
77777777773000000003300000003003300330000003330330333300000000000000003000006766677777000000000000000000000000000000000000000000
77777777770336000000000000003000003333000000030000000000000000300000330000336777777777000000000000000000000000000000000000000000
77777777777766336300300000000000000000000000000000000000000000003333600000067777777777000000000000000000000000000000000000000000
77777777766666666300000000000000000000000000000000000000000000000333333003366677777777000000000000000000000000000000000000000000
77777766666666655555550000000000000000000000000000000000000000000000555555555666777777000000000000000000000000000000000000000000
77777666666655555555555555555000000000000000000000000000000005555555555555566666677777000000000000000000000000000000000000000000
77777766666666666666666665555555555555555555555555555555555555555555555566666666777777000000000000000000000000000000000000000000
77777777776666666666666666666666666666666666666666666666666666666666666666666677777777000000000000000000000000000000000000000000
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777000000000000000000000000000000000000000000
__gff__
0001000001000000000100000000000100000001000000000100000001000001000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
